#!/bin/bash -eu

# whiptail が存在するか
type whiptail > /dev/null 2>&1

# whiptail のエイリアス
w=whiptail

while :; do
  # メインメニュー
  mainmenu=$($w \
    --menu 'GitSweet | メインメニュー' \
    30 90 20 \
    1 'ステータスを見る (git status)' \
    2 'ファイルをステージに追加 (git add)' \
    3 'すべてのファイルをステージに追加 (git add --all)' \
    4 'ファイルをコミット (git commit -m)' \
    5 'すべてのファイルをコミット (git commit -m)' \
    6 'リモートリポジトリにプッシュ (git push)' \
    7 'リモートリポジトリからプル (git pull)' \
    8 'ローカルリポジトリを作成 (git init)' \
    9 'ローカルリポジトリを削除 (rm -rf .git)' \
    10 '前回のコミットを編集 (git rebase -i)' \
    11 'ログを見る (git log)' \
    12 'GitSweet を終了する' \
    3>&1 1>&2 2>&3)

  case $mainmenu in
    1 )
      $w \
        --msgbox "$(git status 2>&1)" \
        30 90 ;;

    2 )
      i=0
      s=65 # ASCII "A"
      for f in $(git ls-files --others --exclude-standard); do
        # 8進数からタグに変換
        files[i]=$(echo -en "\0$(( $s / 64 * 100 + $s % 64 / 8 * 10 + $s % 8 ))")
        files[i+1]="$f"
        ((i+=2))
        ((s++))
      done
      a=$($w \
        --menu 'ステージに追加するファイルを選択' \
        30 90 20 \
        "${files[@]}" \
        2>&1 > /dev/tty)
      p=${files[(( index = 2 * ( $( printf "%d" "'$a" ) - 65 ) + 1 ))]}
      $w \
        --msgbox "$(git add $p 2>&1)" \
        30 90 ;;

    3 )
      $w \
        --msgbox "$(git add --all 2>&1)" \
        30 90 ;;

    4 )
      i=0
      s=65 # ASCII "A"
      for f in $(git ls-files --modified); do
        # 8進数からタグに変換
        files[i]=$(echo -en "\0$(( $s / 64 * 100 + $s % 64 / 8 * 10 + $s % 8 ))")
        files[i+1]="$f"
        ((i+=2))
        ((s++))
      done
      a=$($w \
        --menu 'コミットするファイルを選択' \
        30 90 20 \
        "${files[@]}" \
        2>&1 > /dev/tty)
      t=$($w \
        --inputbox 'コミットメッセージを入力' \
        30 90 \
        2>&1 > /dev/tty)
      p=${files[(( index = 2 * ( $( printf "%d" "'$a" ) - 65 ) + 1 ))]}
      $w \
        --msgbox "$(git commit -m "$t" -- $p 2>&1)" \
        30 90 ;;

    5 )
      t=$($w \
        --inputbox 'コミットメッセージを入力' \
        30 90 \
        2>&1 > /dev/tty)
      echo "$t"
      $w \
        --msgbox "$(git commit -m "$t" 2>&1)" \
        30 90 ;;

    6 )
      a=$($w \
        --yesno 'リモートリポジトリにプッシュしますか？' \
        30 90 \
        2>&1 > /dev/tty; echo $?)
      case $a in
        0 )
          $w \
            --msgbox "$(git push 2>&1)" \
            30 90 ;;

        1 )
          $w \
            --msgbox 'リモートリポジトリへのプッシュを中止しました' \
            30 90 ;;

        * )
          echo $a ;;
      esac ;;

    7 )
      a=$($w \
        --yesno 'リモートリポジトリからプルしますか？' \
        30 90 \
        2>&1 > /dev/tty; echo $?)
      case $a in
        0 )
          $w \
            --msgbox "$(git pull 2>&1)" \
            30 90 ;;

        1 )
          $w \
            --msgbox 'リモートリポジトリからのプルを中止しました' \
            30 90 ;;

        * )
          echo $a ;;
      esac ;;

    8 )
      $w \
        --msgbox "$(git init 2>&1)" \
        30 90 ;;

    9 )
      # ディレクトリ ".git" が存在するなら、中止
      if [ ! -d .git ]; then
        $w \
          --msgbox "リポジトリではありません: $PWD" \
          30 90
        continue
      fi

      a=$($w \
        --yesno '本当にローカルリポジトリを削除しますか？' \
        30 90 \
        2>&1 > /dev/tty; echo $?)
      case $a in
        0 )
          rm -rf .git
          $w \
            --msgbox 'ローカルリポジトリを削除しました' \
            30 90 ;;

        1 )
          $w \
            --msgbox 'ローカルリポジトリの削除を中止しました' \
            30 90 ;;

        * )
          echo $a ;;
      esac ;;

    11 )
      $w \
        --msgbox "$(git log 2>&1)" \
        30 90 ;;

    12 )
      break ;;

    * )
      echo $mainmenu ;;
  esac
done

# 参考: https://stackoverflow.com/questions/1562666/bash-scripts-whiptail-file-select
