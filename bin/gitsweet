#!/bin/bash -eu

# i18n 国際化対応
declare -A i18n
case $LANG in
  'C' )
    i18n=(
    # <autosort>
    [commandGitNotFound]='commandGitNotFound'
    [commandWhiptailNotFound]='commandWhiptailNotFound'
    [gitNotExist]='gitNotExist'
    [mainMenuExit]='mainMenuExit'
    [mainMenuGitAddAllFile]='mainMenuGitAddAllFile'
    [mainMenuGitAddFile]='mainMenuGitAddFile'
    [mainMenuGitAllClean]='mainMenuGitAllClean'
    [mainMenuGitClone]='mainMenuGitClone'
    [mainMenuGitCommitAllFile]='mainMenuGitCommitAllFile'
    [mainMenuGitCommitFile]='mainMenuGitCommitFile'
    [mainMenuGitInit]='mainMenuGitInit'
    [mainMenuGitPull]='mainMenuGitPull'
    [mainMenuGitPush]='mainMenuGitPush'
    [mainMenuGitRebase]='mainMenuGitRebase'
    [mainMenuGitResetAllFile]='mainMenuGitResetAllFile'
    [mainMenuGitResetFile]='mainMenuGitResetFile'
    [mainMenuRemoveGit]='mainMenuRemoveGit'
    [mainMenuShowGitStatus]='mainMenuShowGitStatus'
    [mainMenuViewGitLog]='mainMenuViewGitLog'
    [mainMenu]='mainMenu'
    # </autosort>
    ) ;;

  'ja_JP.UTF-8' )
    i18n=(
    # <autosort>
    [commandGitNotFound]='コマンドが見つかりません: git'
    [commandWhiptailNotFound]='コマンドが見つかりません: whiptail'
    [gitNotExist]='".git/" が存在しません'
    [mainMenuExit]='GitSweet を終了する'
    [mainMenuGitAddAllFile]='すべてのファイルをステージに追加 (git add --all)'
    [mainMenuGitAddFile]='ファイルをステージに追加 (git add)'
    [mainMenuGitAllClean]='ローカルリポジトリをクリーン (git clean)'
    [mainMenuGitClone]='リポジトリをクローン (git clone)'
    [mainMenuGitCommitAllFile]='すべてのファイルをコミット (git commit -m)'
    [mainMenuGitCommitFile]='ファイルをコミット (git commit -m)'
    [mainMenuGitInit]='ローカルリポジトリを作成 (git init)'
    [mainMenuGitPull]='リモートリポジトリからプル (git pull)'
    [mainMenuGitPush]='リモートリポジトリにプッシュ (git push)'
    [mainMenuGitRebase]='前回のコミットを編集 (git rebase -i)'
    [mainMenuGitResetAllFile]='すべてのファイルをリセット (git reset)'
    [mainMenuGitResetFile]='ファイルをリセット (git reset)'
    [mainMenuRemoveGit]='ローカルリポジトリを削除 (rm -rf .git/)'
    [mainMenuShowGitStatus]='ステータスを表示 (git status)'
    [mainMenuViewGitLog]='ログを見る (git log)'
    [mainMenu]='GitSweet | メインメニュー'
    # </autosort>
    ) ;;

  * )
    i18n=(
    # <autosort>
    [commandGitNotFound]='Command not found: git'
    [commandWhiptailNotFound]='Command not found: whiptail'
    [gitNotExist]='".git/" not exist'
    [mainMenuExit]='Exit GitSweet'
    [mainMenuGitAddAllFile]='Add all file to stage (git add --all)'
    [mainMenuGitAddFile]='Add file to stage (git add)'
    [mainMenuGitAllClean]='Clean repository (git clean)'
    [mainMenuGitClone]='Clone repository (git clone)'
    [mainMenuGitCommitAllFile]='Commit all file (git commit -m)'
    [mainMenuGitCommitFile]='Commit file (git commit -m)'
    [mainMenuGitInit]='Create local repository (git init)'
    [mainMenuGitPull]='Pull from remote repository (git pull)'
    [mainMenuGitPush]='Push to remote repository (git push)'
    [mainMenuGitRebase]='Edit last commit (git rebase -i)'
    [mainMenuGitResetAllFile]='Reset all file (git reset)'
    [mainMenuGitResetFile]='Reset file (git reset)'
    [mainMenuRemoveGit]='Remove local repository (rm -rf .git/)'
    [mainMenuShowGitStatus]='Show status (git status)'
    [mainMenuViewGitLog]='View logs (git log)'
    [mainMenu]='GitSweet | Main menu'
    # </autosort>
    ) ;;
esac

# コマンド whiptail が存在するか
function isWhiptailCommand() {
  if !(type whiptail > /dev/null 2>&1); then
    echo "${i18n['commandWhiptailNotFound']}"
    return 255
  fi
}

# メインメニューを表示
function showMainMenu() {
  local menulist=(
  1 "${i18n['mainMenuShowGitStatus']}"
  2 "${i18n['mainMenuGitAddFile']}"
  3 "${i18n['mainMenuGitAddAllFile']}"
  4 "${i18n['mainMenuGitCommitFile']}"
  5 "${i18n['mainMenuGitCommitAllFile']}"
  6 "${i18n['mainMenuGitPush']}"
  7 "${i18n['mainMenuGitPull']}"
  8 "${i18n['mainMenuGitResetFile']}"
  9 "${i18n['mainMenuGitResetAllFile']}"
  10 "${i18n['mainMenuGitAllClean']}"
  11 "${i18n['mainMenuGitInit']}"
  12 "${i18n['mainMenuGitClone']}"
  13 "${i18n['mainMenuRemoveGit']}"
  14 "${i18n['mainMenuGitRebase']}"
  15 "${i18n['mainMenuViewGitLog']}"
  16 "${i18n['mainMenuExit']}"
  )
  local menu=$(whiptail \
    --menu "${i18n['mainMenu']}" \
    30 90 20 \
    "${menulist[@]}" 2>&1 > /dev/tty)
  echo $menu
}

# コマンド git が存在するか
function isGitCommand() {
  if !(type git > /dev/null 2>&1); then
    whiptail \
      --msgbox "${i18n['commandGitNotFound']}" \
      30 90
    return 255
  fi
}

# ディレクトリ ".git/" が存在するか
function isExistGit() {
  if [ ! -d .git ]; then
    whiptail \
      --msgbox "${i18n['gitNotExist']}" \
      30 90
  fi
}

# メインメニューから抜ける
function exitMainMenu() {
  exit
}

# git status を表示
function showGitStatus() {
  isExistGit
}

function main() {
  isWhiptailCommand
  isGitCommand
  while :; do
    case $(showMainMenu) in
      1 )
        showGitStatus ;;

      16 )
        exitMainMenu ;;
    esac
  done
}

main
